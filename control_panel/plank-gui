#!/bin/bash
LC_NUMERIC=C

#####################################################################################################################################
# Plank GUI using Yad for Cub Linux														
# Version 0.4.3
# Added option to alter bounce height
# Force set numbering system to English ie use points not commas for decimals
#
# Allows user to change some Plank settings using a GUI rather than having to edit the config file by hand
# In order to set transparancy, the theme has to be editable by the user eg has to be stored at $HOME/.local/share/plank/themes
# (C) 2016 RichJack																
#
# Released under GPL v3
#
#####################################################################################################################################

# Backup current plank settings on first run to master file so user can revert
if [[ ! -f "$HOME/.config/plank/dock1/settings.master" ]]; then
	cp -f "$HOME/.config/plank/dock1/settings" "$HOME/.config/plank/dock1/settings.master"
fi

# Read current values from local Plank settings file
CurrIconSize=$(grep "IconSize=" $HOME/.config/plank/dock1/settings | awk -F'=' '{print $2}')
CurrHideMode=$(grep "HideMode=" $HOME/.config/plank/dock1/settings | awk -F'=' '{print $2}')
CurrPosition=$(grep "Position=" $HOME/.config/plank/dock1/settings | awk -F'=' '{print $2}')
CurrAlignment=$(grep "Alignment=" $HOME/.config/plank/dock1/settings | grep -v "ItemsAlignment=" | awk -F'=' '{print $2}')
CurrOffset=$(grep "Offset=" $HOME/.config/plank/dock1/settings | awk -F'=' '{print $2}')
CurrTheme=$(grep "Theme=" $HOME/.config/plank/dock1/settings | awk -F'=' '{print $2}')
CurrLockItems=$(grep "LockItems=" $HOME/.config/plank/dock1/settings | awk -F'=' '{print $2}')

# Check if Plank theme is local or not and if necessary copy theme to local directory so it can be edited
# Save new theme name to the settings file to avoid conflict
if [[ ! -d "$HOME/.local/share/plank/themes/$CurrTheme" ]]; then
	OriginTheme="/usr/share/plank/themes/$CurrTheme"
	mkdir -p "$HOME/.local/share/plank/themes"
	cp -rf "/usr/share/plank/themes/$CurrTheme" "$HOME/.local/share/plank/themes/"
	mv "$HOME/.local/share/plank/themes/$CurrTheme" "$HOME/.local/share/plank/themes/$CurrTheme-user"
	sed -i "/Theme=$CurrTheme/c\Theme=$CurrTheme-user" "$HOME/.config/plank/dock1/settings"
	CurrTheme="$CurrTheme-user"
else
	OriginTheme="$HOME/.local/share/plank/themes/$CurrTheme"
fi
# Create master copy of theme file
if [[ ! -f "$HOME/.local/share/plank/themes/$CurrTheme/dock.theme.default" ]]; then
	cp -f "$HOME/.local/share/plank/themes/$CurrTheme/dock.theme" "$HOME/.local/share/plank/themes/$CurrTheme/dock.theme.default"
fi

# Now read settings from local Plank theme file
CurrColorFrom=$(grep "FillStartColor=" "$HOME/.local/share/plank/themes/$CurrTheme/dock.theme" | awk -F'=' '{print $2}')
CurrColorTo=$(grep "FillEndColor=" "$HOME/.local/share/plank/themes/$CurrTheme/dock.theme" | awk -F'=' '{print $2}')
CurrItemPadding=$(grep "ItemPadding=" "$HOME/.local/share/plank/themes/$CurrTheme/dock.theme" | awk -F'=' '{print $2}')
CurrTopPadding=$(grep "TopPadding=" "$HOME/.local/share/plank/themes/$CurrTheme/dock.theme" | awk -F'=' '{print $2}')
CurrBottomPadding=$(grep "BottomPadding=" "$HOME/.local/share/plank/themes/$CurrTheme/dock.theme" | awk -F'=' '{print $2}')
CurrBounce=$(grep "LaunchBounceHeight=" "$HOME/.local/share/plank/themes/$CurrTheme/dock.theme" | awk -F'=' '{print $2}') 
CurrUrgent=$(grep "UrgentBounceHeight=" "$HOME/.local/share/plank/themes/$CurrTheme/dock.theme" | awk -F'=' '{print $2}')

# Circuitous way to get the current values for combi-boxes and set the default value in Yad

case $CurrHideMode in
	0) YadHideMode="None!Intelli-hide!Autohide!Dodge" ;;
	1) YadHideMode="Intelli-hide!None!Autohide!Dodge" ;;
	2) YadHideMode="Autohide!None!Intelli-hide!Dodge" ;;
	3) YadHideMode="Dodge!None!Intelli-hide!Autohide" ;;
	*) YadHideMode="None!Intelli-hide!Autohide!Dodge" ;;
esac

case $CurrPosition in
	0) YadPosition="Left!Right!Top!Bottom" ;;
	1) YadPosition="Right!Left!Top!Bottom" ;;
	2) YadPosition="Top!Left!Right!Bottom" ;;
	3) YadPosition="Bottom!Left!Right!Top" ;;
	*) YadPosition="Left!Right!Top!Bottom" ;;
esac

case $CurrAlignment in
	0) YadAlignment="Panel-mode!Left-aligned!Right-aligned!Centered" ;;
	1) YadAlignment="Left-aligned!Panel-mode!Right-aligned!Centered" ;;
	2) YadAlignment="Right-aligned!Panel-mode!Left-aligned!Centered" ;;
	3) YadAlignment="Centered!Panel-mode!Left-aligned!Right-aligned" ;;
	*) YadAlignment="Panel-mode!Left-aligned!Right-aligned!Centered" ;;
esac

# Translate color codes
# First get the values for RGB in 8 bit integer 0-255, then convert to 16 bit, transpose into Hex and finally combine for Yad
# Red
CurrColorFromR=$(grep "FillStartColor=" "$HOME/.local/share/plank/themes/$CurrTheme/dock.theme" | awk -F'=' '{print $2}' | awk -F';;' '{print $1}')
CurrColorFromR16=`echo "scale=9;($CurrColorFromR/255)*65535" | bc | awk '{print int($1+0.5)}'`
CurrColorFromRhex=`printf "%04x" $CurrColorFromR16`
#Green
CurrColorFromG=$(grep "FillStartColor=" "$HOME/.local/share/plank/themes/$CurrTheme/dock.theme" | awk -F';;' '{print $2}')
CurrColorFromG16=`echo "scale=9;($CurrColorFromG/255)*65535" | bc | awk '{print int($1+0.5)}'`
CurrColorFromGhex=`printf "%04x" $CurrColorFromG16`
#Blue
CurrColorFromB=$(grep "FillStartColor=" "$HOME/.local/share/plank/themes/$CurrTheme/dock.theme" | awk -F';;' '{print $3}')
CurrColorFromB16=`echo "scale=9;($CurrColorFromB/255)*65535" | bc | awk '{print int($1+0.5)}'`
CurrColorFromBhex=`printf "%04x" $CurrColorFromB16`
#Combine Hex color
YadColorFrom=#"$CurrColorFromRhex$CurrColorFromGhex$CurrColorFromBhex"
#Alpha
CurrColorFromA=$(grep "FillStartColor=" "$HOME/.local/share/plank/themes/$CurrTheme/dock.theme" | awk -F';;' '{print $4}')

# Red
CurrColorToR=$(grep "FillEndColor=" "$HOME/.local/share/plank/themes/$CurrTheme/dock.theme" | awk -F'=' '{print $2}' | awk -F';;' '{print $1}')
CurrColorToR16=`echo "scale=9;($CurrColorToR/255)*65535" | bc | awk '{print int($1+0.5)}'`
CurrColorToRhex=`printf "%04x" $CurrColorToR16`
#Green
CurrColorToG=$(grep "FillEndColor=" "$HOME/.local/share/plank/themes/$CurrTheme/dock.theme" | awk -F';;' '{print $2}')
CurrColorToG16=`echo "scale=9;($CurrColorToG/255)*65535" | bc | awk '{print int($1+0.5)}'`
CurrColorToGhex=`printf "%04x" $CurrColorToG16`
#Blue
CurrColorToB=$(grep "FillEndColor=" "$HOME/.local/share/plank/themes/$CurrTheme/dock.theme" | awk -F';;' '{print $3}')
CurrColorToB16=`echo "scale=9;($CurrColorToB/255)*65535" | bc | awk '{print int($1+0.5)}'`
CurrColorToBhex=`printf "%04x" $CurrColorToB16`
#Combine Hex color
YadColorTo=#"$CurrColorToRhex$CurrColorToGhex$CurrColorToBhex"
#Alpha
CurrColorToA=$(grep "FillEndColor=" "$HOME/.local/share/plank/themes/$CurrTheme/dock.theme" | awk -F';;' '{print $4}')

function savechanges(){

# If something has gone wrong and the responses aren't saved to the variable Response also quit
if [[ -z $Settings ]]; then
	exit 1
fi

# Retrieve each setting from yad output and save to settings or theme file
# Change icon size
NewIconSize=$(echo $Settings | awk -F"|" '{print $1}')
# Remove trailing decimal places from icon size when saving to settings file
sed -i "/IconSize=$CurrIconSize/c\IconSize=${NewIconSize%.*}" "$HOME/.config/plank/dock1/settings"

# Change hide mode
YadHideMode=$(echo $Settings | awk -F"|" '{print $2}')
case $YadHideMode in
	None) NewHideMode=0 ;;
	Intelli-hide) NewHideMode=1 ;;
	Autohide) NewHideMode=2 ;;
	Dodge) NewHideMode=3 ;;
	*) NewHideMode=0 ;;
esac
sed -i "/HideMode=$CurrHideMode/c\HideMode=$NewHideMode" "$HOME/.config/plank/dock1/settings"

# Change position / screen edge
YadPosition=$(echo $Settings | awk -F"|" '{print $3}')
case $YadPosition in
	Left) NewPosition=0 ;;
	Right) NewPosition=1 ;;
	Top) NewPosition=2 ;;
	Bottom) NewPosition=3 ;;
	*) NewPosition=3 ;;
esac
sed -i "/Position=$CurrPosition/c\Position=$NewPosition" "$HOME/.config/plank/dock1/settings"

# Change Alignment
YadAlignment=$(echo $Settings | awk -F"|" '{print $4}')
case $YadAlignment in
	Panel-mode) NewAlignment=0 ;;
	Left-aligned) NewAlignment=1 ;;
	Right-aligned) NewAlignment=2 ;;
	Centered) NewAlignment=3 ;;
	*) NewAlignment=1 ;;
esac
sed -i "/Alignment=$CurrAlignment/c\Alignment=$NewAlignment" "$HOME/.config/plank/dock1/settings"

# Change offset
NewOffset=$(echo $Settings | awk -F"|" '{print $5}')
sed -i "/Offset=$CurrOffset/c\Offset=${NewOffset%.*}" ~/.config/plank/dock1/settings

# Save changes to theme file which was earlier copied to local folder
# Change Color From
NewYadColorFrom=$(echo $Settings | awk -F"|" '{print $6}')
# Split output from Yad into RRRR GGGG BBBB Hex, convert into uppercase, then decimal 16 bit and then decimal 8 bit format for Plank
NewColorFromRhex=$(echo $NewYadColorFrom | cut -c2-5)
NewColorFromR16=$(echo "ibase=16; ${NewColorFromRhex^^}" | bc )
NewColorFromR=$(echo "scale=9;($NewColorFromR16/65535)*255" | bc | awk '{print int($1+0.5)}')
NewColorFromGhex=$(echo $NewYadColorFrom | cut -c6-9)
NewColorFromG16=$(echo "ibase=16; ${NewColorFromGhex^^}" | bc )
NewColorFromG=$(echo "scale=9;($NewColorFromG16/65535)*255" | bc | awk '{print int($1+0.5)}')
NewColorFromBhex=$(echo $NewYadColorFrom | cut -c10-13)
NewColorFromB16=$(echo "ibase=16; ${NewColorFromBhex^^}" | bc )
NewColorFromB=$(echo "scale=9;($NewColorFromB16/65535)*255" | bc | awk '{print int($1+0.5)}')
# Get Alpha value next
NewColorFromA=$(echo $Settings | awk -F"|" '{print $8}')
# Save changes into theme file
sed -i "/FillStartColor=$CurrColorFrom/c\FillStartColor=$NewColorFromR;;$NewColorFromG;;$NewColorFromB;;${NewColorFromA%.*}" \
"$HOME/.local/share/plank/themes/$CurrTheme/dock.theme"

# Change Color To
NewYadColorTo=$(echo $Settings | awk -F"|" '{print $7}')
# Split output To Yad into RRRR GGGG BBBB Hex, convert into decimal 16 bit and then decimal 8 bit format for Plank
NewColorToRhex=$(echo $NewYadColorTo | cut -c2-5)
NewColorToR16=$(echo "ibase=16; ${NewColorToRhex^^}" | bc )
NewColorToR=$(echo "scale=9;($NewColorToR16/65535)*255" | bc | awk '{print int($1+0.5)}')
NewColorToGhex=$(echo $NewYadColorTo | cut -c6-9)
NewColorToG16=$(echo "ibase=16; ${NewColorToGhex^^}" | bc )
NewColorToG=$(echo "scale=9;($NewColorToG16/65535)*255" | bc | awk '{print int($1+0.5)}')
NewColorToBhex=$(echo $NewYadColorTo | cut -c10-13)
NewColorToB16=$(echo "ibase=16; ${NewColorToBhex^^}" | bc )
NewColorToB=$(echo "scale=9;($NewColorToB16/65535)*255" | bc | awk '{print int($1+0.5)}')
# Get Alpha value next
NewColorToA=$(echo $Settings | awk -F"|" '{print $9}')
# Save changes into theme file
sed -i "/FillEndColor=$CurrColorTo/c\FillEndColor=$NewColorToR;;$NewColorToG;;$NewColorToB;;${NewColorToA%.*}" \
"$HOME/.local/share/plank/themes/$CurrTheme/dock.theme"

# Change item padding. Reduce to 1 decimal place first.
YadItemPadding=$(echo $Settings | awk -F"|" '{print $10}')
NewItemPadding=$(printf "%0.1f" $YadItemPadding)
sed -i "/ItemPadding=$CurrItemPadding/c\ItemPadding=$NewItemPadding" "$HOME/.local/share/plank/themes/$CurrTheme/dock.theme"
# Change top margin/padding
YadTopPadding=$(echo $Settings | awk -F"|" '{print $11}')
NewTopPadding=$(printf "%0.1f" $YadTopPadding)
sed -i "/TopPadding=$CurrTopPadding/c\TopPadding=$NewTopPadding" "$HOME/.local/share/plank/themes/$CurrTheme/dock.theme"
# Change bottom margin
YadBottomPadding=$(echo $Settings | awk -F"|" '{print $12}')
NewBottomPadding=$(printf "%0.1f" $YadBottomPadding)
sed -i "/BottomPadding=$CurrBottomPadding/c\BottomPadding=$NewBottomPadding" "$HOME/.local/share/plank/themes/$CurrTheme/dock.theme"
# Change bounce height
YadBounce=$(echo $Settings | awk -F"|" '{print $13}')
NewBounce=$(printf "%0.1f" $YadBounce)
sed -i "/LaunchBounceHeight=$CurrBounce/c\LaunchBounceHeight=$NewBounce" "$HOME/.local/share/plank/themes/$CurrTheme/dock.theme"
# Change urgent bounce height
YadUrgent=$(echo $Settings | awk -F"|" '{print $14}')
NewUrgent=$(printf "%0.1f" $YadUrgent)
sed -i "/UrgentBounceHeight=$CurrUrgent/c\UrgentBounceHeight=$NewUrgent" "$HOME/.local/share/plank/themes/$CurrTheme/dock.theme"

# Change lock mode
NewLockItems=$(echo $Settings | awk -F"|" '{print $16}')
sed -i "/LockItems=$CurrLockItems/c\LockItems=${NewLockItems,,}" "$HOME/.config/plank/dock1/settings"

# Change theme
NewTheme=$(echo $Settings | awk -F"|" '{print $17}' | awk -F"/" '{ print $NF }')
echo Old Theme is $CurrTheme
echo New Theme is $NewTheme
sed -i "/Theme=$CurrTheme/c\Theme=$NewTheme" "$HOME/.config/plank/dock1/settings"
}

function resetmaster(){
	
yad --title="Plank Dock Settings" --text='<span font_weight="bold">Restore Dock Settings To First Run</span>\n\nAre you sure you want to restore the dock to how it was when you first ran this utility?' \
--center --window-icon=/usr/share/icons/hicolor/128x128/apps/plank.svg --image=/usr/share/icons/hicolor/48x48/apps/plank.svg \
--image-on-top --button="gtk-cancel:1" --button="gtk-ok:0"

if [[ $? == 0 ]]; then
	cp -f "$HOME/.config/plank/dock1/settings.master" "$HOME/.config/plank/dock1/settings"
	cp -f "$HOME/.local/share/plank/themes/$CurrTheme/dock.theme.default" "$HOME/.local/share/plank/themes/$CurrTheme/dock.theme"
else
	exit 0
fi

}

# Main widget window

Settings=$(yad --title="Plank Dock Settings" --text='<span font_weight="bold">Dock Settings</span>' --form --scroll --width=475 --height=475 \
--window-icon=/usr/share/icons/hicolor/128x128/apps/plank.svg --image=/usr/share/icons/hicolor/48x48/apps/plank.svg --image-on-top \
--class=plank-gui --name=plank-gui --center \
--button="gtk-close:1" --button="Restore Defaults:2" --button="gtk-apply:0" \
--field="Dock Height (pixels):Num" \
--field="Hide Mode:CB"  \
--field="Screen edge:CB"  \
--field="Alignment:CB"  \
--field="Offset from center (percent):Num" \
--field="Tint color From:CLR" \
--field="Tint color To:CLR" \
--field="Transparency (Alpha value) Top Edge:Num" \
--field="Transparency (Alpha value) Bottom Edge:Num" \
--field="Item Spacing:Num" \
--field="Top Margin:Num" \
--field="Bottom Margin:Num" \
--field="Icon Launch Bounce Height:Num" \
--field="Icon Urgent Bounce Height:Num" \
--field=":LBL" \
--field="Lock Dock:CHK" \
--field="Select a new theme:DIR" \
--field=" Configure System Tray!gtk-preferences!Launch separate window to configure the system tray area:BTN" \
-- "$CurrIconSize!16..64" "$YadHideMode" "$YadPosition" "$YadAlignment" "$CurrOffset!-100..100" \
"$YadColorFrom" "$YadColorTo" "$CurrColorFromA!0..255" "$CurrColorToA!0..255" "$CurrItemPadding!1..20!0.5!1" "$CurrTopPadding!0..20!0.5!1" \
"$CurrBottomPadding!0..20!0.5!1" "$CurrBounce!0..5!0.1!1" "$CurrUrgent!0..5!0.1!1" "" "$CurrLockItems" "$OriginTheme" "lxpanelctl config" )
response=$?
# If cancelled then don't do anything, just quit now!
# Cancel = 1  Close window icon = 252
# Once applied keep dialog open?
echo $Settings
case $response in
	0) savechanges && plank-gui;;
	1) exit 0 ;;
	2) resetmaster ;;
	252) exit 0 ;;
	*) exit 1;;
esac

